<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (c) 2022-2023 Peter Kirmeier -->
<Application xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:u="clr-namespace:SystemTrayMenu.Utilities"
             xmlns:stm="clr-namespace:SystemTrayMenu"
             x:Class="SystemTrayMenu.App">

    <Application.Resources>
        <ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<!-- TODO: ResourceInclude Source="/Resources/ScrollBarStyles.axaml" /-->
			</ResourceDictionary.MergedDictionaries>

			<u:LocalResourceBitmap x:Key="ApplicationImage">
				<x:Arguments>/Resources/SystemTrayMenu.png</x:Arguments>
			</u:LocalResourceBitmap>

			<u:LocalResourceBitmap x:Key="ApplicationIconImage">
				<x:Arguments>/Resources/SystemTrayMenu.ico</x:Arguments>
			</u:LocalResourceBitmap>
			<u:LocalResourceBitmap x:Key="LinkArrowIconImage">
				<x:Arguments>/Resources/LinkArrow.ico</x:Arguments>
			</u:LocalResourceBitmap>
			<u:LocalResourceBitmap x:Key="LoadingIconImage">
				<x:Arguments>/Resources/Loading.ico</x:Arguments>
			</u:LocalResourceBitmap>
			<u:LocalResourceBitmap x:Key="NotFoundIconImage">
				<x:Arguments>/Resources/NotFound.ico</x:Arguments>
			</u:LocalResourceBitmap>

            <SolidColorBrush x:Key="ButtonHoverColor" Color="Gray" Opacity="0.5"/>
		</ResourceDictionary>
	</Application.Resources>

	<Application.Styles>
		<FluentTheme />

		<Style Selector="Window">
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
			<Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" />
			<!-- TODO: <Setter Property="TextOptions.TextFormattingMode" Value="Display" /-->
			<Setter Property="UseLayoutRounding" Value="True" />
		</Style>
		<Style Selector="TabItem">
			<!-- not working for selected TabIdem yet, so we keep default colors -->
			<!--Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" /-->
			<!--Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" /-->
		</Style>
		<Style Selector="TabControl">
			<Setter Property="Background" Value="Transparent" />
		</Style>
		<Style Selector="TextBlock">
			<!--not used yet as several controls are using it but overwriting colors let them look bad -->
			<!--Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" /-->
			<!--Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" /-->
		</Style>
		<Style Selector="Label">
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
		</Style>

		<Style Selector="Border">
			<!-- TODO: Make selector work for final GroupBox type -->
			<Setter Property="Margin" Value="2" />
			<Setter Property="Padding" Value="2" />
			<!-- TODO: Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" / -->
		</Style>
		<Style Selector="TextBox">
			<!-- Please update HotkeySelector as well -->
			<Setter Property="Height" Value="21" />
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
			<Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" />
			<!-- TODO: Setter Property="SelectionTextBrush" Value="White" /-->
			<Setter Property="SelectionBrush" Value="#0078d7" />
		</Style>
		<Style Selector="TextBox">
			<!-- TODO: Make selector work for final GroupBox type -->
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
			<Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" />
		</Style>
		<Style Selector="CheckBox">
			<Setter Property="Margin" Value="3" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
		</Style>
		<Style Selector="ComboBox">
			<!-- not working for selected TabIdem yet, so we keep default colors -->
			<!--Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" /-->
			<!--Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" /-->
		</Style>
		<Style Selector="ItemsRepeater">
			<!-- TODO: Make selector work for final ListView type -->
			<!-- TODO: Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" /-->
			<Setter Property="Background" Value="{x:Static stm:MenuDefines.ColorBackground}" />
		</Style>
		<Style Selector="RadioButton">
			<Setter Property="Margin" Value="3" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
		</Style>
		<Style Selector="Button">
			<Setter Property="MinWidth" Value="76" />
			<Setter Property="Foreground" Value="{x:Static stm:MenuDefines.ColorForeground}" />
			<!-- TODO: Find better solution instead of re-implementing the control template of a button,
                                   only to manage changing the mouse hover border color. -->
			<Setter Property="BorderBrush" Value="{StaticResource ButtonHoverColor}" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="Border" Margin="2" Padding="7,5" BorderThickness="1" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
						</Border>
						<!-- TODO: <ControlTemplate.Triggers>                                                                                               -->
						<!-- TODO:     <Trigger Property="IsMouseOver" Value="True">                                                                        -->
						<!-- TODO:         <Setter Property="BorderBrush" Value="{x:Static stm:MenuDefines.ColorSelectedItemBorder}" TargetName="Border" /> -->
						<!-- TODO:         <Setter Property="Background" Value="{StaticResource ButtonHoverColor}" TargetName="Border" />                   -->
						<!-- TODO:         <Setter Property="Opacity" Value="0.9" TargetName="Border" />                                                    -->
						<!-- TODO:     </Trigger>                                                                                                           -->
						<!-- TODO: </ControlTemplate.Triggers>                                                                                              -->
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Styles>
</Application>
